"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["index.html","824a4d22f560679c8b5ac79d3029a9cf"],["static/css/main.cfd140e6.css","1a00e7136ed1cf55fec052c3eb312e62"],["static/js/main.eba78af9.js","26e90b8f568cde2ac91348db2ddd9a40"],["static/media/Lato-Black.77d35374.ttf","77d353744697c77955f9bacc7f3ed90a"],["static/media/Lato-Bold.44dfe8cc.ttf","44dfe8cc676882243911a3197a50169e"],["static/media/Lato-Hairline.db15ac79.ttf","db15ac7981b2d2897d1a3c22892b5a51"],["static/media/Lato-Light.5b761f2d.ttf","5b761f2d1e4259ea6ac7ab3ebf7f3c49"],["static/media/Lato-Regular.7f690e50.ttf","7f690e503a254e0b8349aec0177e07aa"],["static/media/NunitoSans-Black.08ef5d7a.ttf","08ef5d7a2e3e27223df1b1db25b65b82"],["static/media/NunitoSans-Bold.51066f4d.ttf","51066f4d1d33630cd761e8cd0168d7b0"],["static/media/NunitoSans-ExtraBold.e6a9e16c.ttf","e6a9e16cac802736f3c92c47d94a52de"],["static/media/NunitoSans-ExtraLight.bc36a872.ttf","bc36a8726e20804a94da3a12bd6eda84"],["static/media/NunitoSans-Light.3a318cfc.ttf","3a318cfcc78904616af13303520a69a1"],["static/media/NunitoSans-Regular.fb98ed17.ttf","fb98ed1700e8dfaf0764c11fc36a0a05"],["static/media/NunitoSans-SemiBold.9c443ad7.ttf","9c443ad7c0f391c4854a6b7c0f52788b"],["static/media/icon-back.4c7be5bc.svg","4c7be5bc19ba17e41354be020ba58340"],["static/media/icon-download.012c24d1.svg","012c24d1550fb9af7e8ad3046c48fcb9"],["static/media/icon-scout.a64a8ee8.svg","a64a8ee80f9e00cf699c01a14291efbc"],["static/media/no-results.e43118a5.svg","e43118a523b5a7fd004d57a1c6841952"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);t=urlsToCacheKeys.has(a);t||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("./index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});